<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">
		
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	
	<!-- Activate Component Scanner -->
	<context:component-scan base-package="app" annotation-config="true" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="assignable" expression="app.core.pathElement.handlerMapping.PathElementHandlerMapping"/>
	</context:component-scan>
	
	<!-- Multipart Resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- one of the properties available; the maximum file size in bytes -->
	    <property name="maxUploadSize" value="1000000"/>
	</bean>
     
	<!-- Tiles 3 Configurer -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" >
	    <property name="definitions">
	        <value>/WEB-INF/conf/tiles.xml</value>
	    </property>
	    <property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory" />
	</bean>
     
	<!-- Shiro Security: Filter Config -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/login" />
	    <property name="successUrl" value="/" />
	    <property name="unauthorizedUrl" value="/accessDenied"/>
	    <property name="filters">
	    	<util:map>
	    		<entry key="anyRoles" value-ref="anyRolesAuthorizationFilter" />
	    	</util:map>
	    </property>
	    <property name="filterChainDefinitions">
	        <value>
	            /login = authc
	            /logout = logout
	        	/rest/admin/** = authc, roles[ROLE_ADMIN]
	        </value>
	    </property>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <property name="realm" ref="appRealm"/>
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
	</bean>

	<!-- Database Stuff -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/springwebapp"/>
		<property name="username" value="root"/>
		<property name="password" value="admin"/>
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="app" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!-- prop key="hibernate.autocommit">true</prop-->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
    <!-- Email Sender (Using GMail) -->
    <bean id="gmailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="25"/>
        <property name="username" value="my.gmail.address@gmail.com"/>
        <property name="password" value="my.gmail.password"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">false</prop>
            </props>
        </property>
    </bean>
    	
	<!-- App Settings (see AppService.appSettings) -->
	<util:map id="appSettings" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.String">
		<entry key="fooSetting" value="foo!" />
		<entry key="barSetting" value="bar!" />
	</util:map>
		
</beans>
